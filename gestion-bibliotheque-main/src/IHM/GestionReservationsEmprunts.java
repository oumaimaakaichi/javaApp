package IHM;

import Utility.BibalExceptions;
import Utility.DBConnection;
import Utility.ModelTableau;
import static Utility.Utility.closeStatementResultSet;
import static Utility.Utility.initialiseRequetePreparee;
import static Utility.Utility.showMessageSucces;
import control.EmpruntControl;
import control.ExemplaireControl;
import control.OeuvreControl;
import control.ReservationControl;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import Modele.Emprunt;
import Modele.Exemplaire;
import Modele.Livre;
import Modele.Magazine;
import Modele.Oeuvre;
import Modele.Reservation;
import static java.lang.Integer.parseInt;
import static javax.swing.JOptionPane.showMessageDialog;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.table.*;
import java.awt.*;
import com.spire.doc.Document;
import com.spire.doc.FileFormat;
import com.spire.doc.Table;
import com.spire.doc.documents.DocumentObjectType;
import com.spire.doc.fields.Field;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;


public class GestionReservationsEmprunts extends javax.swing.JFrame {

   
    public GestionReservationsEmprunts() {
        initComponents();
         setIdentifiant();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/images/bibliotheque_icone.png")));
        tableExemplaires.setModel(new ModelTableau(new Object[0][0],
                new String[]{"ID", "Etat"}));
        tableExemplaires.setRowHeight(30);

        tableEmpCours.setModel(new ModelTableau(new Object[0][0],
                new String[]{"ID", "Exemplaire", "Usager",
                    "Date Emprunt", "Date Retour"}));
        tableEmpCours.setRowHeight(30);

        tableResaCours.setModel(new ModelTableau(new Object[0][0],
                new String[]{"ID", "Oeuvre", "Usager",
                    "Date Réervation"}));
        tableResaCours.setRowHeight(30);
         mainPanel.add(EmpruntPanel, "panel1");
                 mainPanel.add(ReservationPanel, "panel2");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        empruntsButton = new javax.swing.JButton();
        ReservationButton = new javax.swing.JButton();
        retourButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        identifiantLabel1 = new javax.swing.JLabel();
        identifiantComboBox = new javax.swing.JComboBox<>();
        titreLabelValue = new javax.swing.JLabel();
        categorieLabelValue = new javax.swing.JLabel();
        nbExemplaireLabelValue = new javax.swing.JLabel();
        auteurLabelValue = new javax.swing.JLabel();
        typeOeuvreLabelValue = new javax.swing.JLabel();
        auteurLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        mainPanel = new javax.swing.JPanel();
        ReservationPanel = new javax.swing.JPanel();
        menuResaPanel = new javax.swing.JPanel();
        reserverButton = new javax.swing.JButton();
        affResaButton = new javax.swing.JButton();
        annulerResaButton = new javax.swing.JButton();
        imprimer = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableResaCours = new javax.swing.JTable();
        EmpruntPanel = new javax.swing.JPanel();
        menuEmpPanel = new javax.swing.JPanel();
        emprunterButton = new javax.swing.JButton();
        affEmpButton = new javax.swing.JButton();
        rendreButton = new javax.swing.JButton();
        affExempButton = new javax.swing.JButton();
        panExemplaires = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableExemplaires = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableEmpCours = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 51, 0));
        jLabel1.setText("Gestion des Réservations et Emprunts ");

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        empruntsButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        empruntsButton.setText("Emprunts ");
        empruntsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empruntsButtonActionPerformed(evt);
            }
        });

        ReservationButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ReservationButton.setText("Réservations");
        ReservationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReservationButtonActionPerformed(evt);
            }
        });

        retourButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        retourButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Go-back-icon.png"))); // NOI18N
        retourButton.setText("Retour");
        retourButton.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        retourButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retourButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(retourButton, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(ReservationButton, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                        .addComponent(empruntsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(empruntsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ReservationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90)
                .addComponent(retourButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        identifiantLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        identifiantLabel1.setForeground(new java.awt.Color(108, 92, 92));
        identifiantLabel1.setText("Identifiant");

        identifiantComboBox.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        identifiantComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choix ID" }));
        identifiantComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                identifiantComboBoxActionPerformed(evt);
            }
        });

        titreLabelValue.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        categorieLabelValue.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        nbExemplaireLabelValue.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        nbExemplaireLabelValue.setText("--");

        auteurLabelValue.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        typeOeuvreLabelValue.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        typeOeuvreLabelValue.setText(".");

        auteurLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        auteurLabel1.setForeground(new java.awt.Color(108, 92, 92));
        auteurLabel1.setText("Auteur");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(108, 92, 92));
        jLabel2.setText("Nombre d'exemplaire");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(108, 92, 92));
        jLabel3.setText("Type de l'oeuvre");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(108, 92, 92));
        jLabel4.setText("Titre");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(108, 92, 92));
        jLabel5.setText("catégories");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(identifiantLabel1)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(49, 49, 49)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(categorieLabelValue)
                    .addComponent(titreLabelValue)
                    .addComponent(identifiantComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(auteurLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(auteurLabelValue))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nbExemplaireLabelValue)
                        .addGap(46, 46, 46))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(typeOeuvreLabelValue)
                        .addGap(56, 56, 56))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(identifiantLabel1)
                            .addComponent(identifiantComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(typeOeuvreLabelValue))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(auteurLabelValue)
                    .addComponent(titreLabelValue)
                    .addComponent(jLabel4)
                    .addComponent(auteurLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(categorieLabelValue)
                        .addComponent(jLabel5))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(nbExemplaireLabelValue)))
                .addContainerGap())
        );

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));
        mainPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        mainPanel.setLayout(new java.awt.CardLayout());

        ReservationPanel.setBackground(new java.awt.Color(255, 255, 255));
        ReservationPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        menuResaPanel.setBackground(new java.awt.Color(255, 255, 255));
        menuResaPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        reserverButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        reserverButton.setText("Reserver");
        reserverButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserverButtonActionPerformed(evt);
            }
        });

        affResaButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        affResaButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Programming-Show-Property-icon.png"))); // NOI18N
        affResaButton.setText("Affichager");
        affResaButton.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        affResaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                affResaButtonActionPerformed(evt);
            }
        });

        annulerResaButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        annulerResaButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Apps-Dialog-Close-icon.png"))); // NOI18N
        annulerResaButton.setText("Annuler");
        annulerResaButton.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        annulerResaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annulerResaButtonActionPerformed(evt);
            }
        });

        imprimer.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        imprimer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/imprimer-icone-3918-48.png"))); // NOI18N
        imprimer.setText("imprimer");
        imprimer.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        imprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout menuResaPanelLayout = new javax.swing.GroupLayout(menuResaPanel);
        menuResaPanel.setLayout(menuResaPanelLayout);
        menuResaPanelLayout.setHorizontalGroup(
            menuResaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuResaPanelLayout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(reserverButton)
                .addGap(52, 52, 52)
                .addComponent(affResaButton)
                .addGap(33, 33, 33)
                .addComponent(imprimer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addComponent(annulerResaButton)
                .addGap(59, 59, 59))
        );
        menuResaPanelLayout.setVerticalGroup(
            menuResaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuResaPanelLayout.createSequentialGroup()
                .addContainerGap(53, Short.MAX_VALUE)
                .addGroup(menuResaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reserverButton)
                    .addComponent(affResaButton)
                    .addComponent(annulerResaButton)
                    .addComponent(imprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45))
        );

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        tableResaCours.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableResaCours.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tableResaCoursMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tableResaCours);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout ReservationPanelLayout = new javax.swing.GroupLayout(ReservationPanel);
        ReservationPanel.setLayout(ReservationPanelLayout);
        ReservationPanelLayout.setHorizontalGroup(
            ReservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(menuResaPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        ReservationPanelLayout.setVerticalGroup(
            ReservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReservationPanelLayout.createSequentialGroup()
                .addComponent(menuResaPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 70, Short.MAX_VALUE))
        );

        mainPanel.add(ReservationPanel, "card2");

        EmpruntPanel.setBackground(new java.awt.Color(255, 255, 255));

        menuEmpPanel.setBackground(new java.awt.Color(255, 255, 255));
        menuEmpPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        emprunterButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        emprunterButton.setText("Emprunter");
        emprunterButton.setEnabled(false);
        emprunterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emprunterButtonActionPerformed(evt);
            }
        });

        affEmpButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        affEmpButton.setText("Afficher emprunts ");
        affEmpButton.setDoubleBuffered(true);
        affEmpButton.setEnabled(false);
        affEmpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                affEmpButtonActionPerformed(evt);
            }
        });

        rendreButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rendreButton.setText("Rendre");
        rendreButton.setDoubleBuffered(true);
        rendreButton.setEnabled(false);
        rendreButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rendreButtonActionPerformed(evt);
            }
        });

        affExempButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        affExempButton.setText("Afficher exemplaires ");
        affExempButton.setEnabled(false);
        affExempButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                affExempButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout menuEmpPanelLayout = new javax.swing.GroupLayout(menuEmpPanel);
        menuEmpPanel.setLayout(menuEmpPanelLayout);
        menuEmpPanelLayout.setHorizontalGroup(
            menuEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuEmpPanelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(menuEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(emprunterButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(affEmpButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(menuEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(affExempButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(rendreButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(151, 151, 151))
        );
        menuEmpPanelLayout.setVerticalGroup(
            menuEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuEmpPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(rendreButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(affExempButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuEmpPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(emprunterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(affEmpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11))
        );

        panExemplaires.setBackground(new java.awt.Color(255, 255, 255));
        panExemplaires.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Exemplaires disponibles", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        tableExemplaires.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Etat"
            }
        ));
        tableExemplaires.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tableExemplairesMouseReleased(evt);
            }
        });
        jScrollPane4.setViewportView(tableExemplaires);

        javax.swing.GroupLayout panExemplairesLayout = new javax.swing.GroupLayout(panExemplaires);
        panExemplaires.setLayout(panExemplairesLayout);
        panExemplairesLayout.setHorizontalGroup(
            panExemplairesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panExemplairesLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        panExemplairesLayout.setVerticalGroup(
            panExemplairesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panExemplairesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Emprunts en cours des exemplaires de l'oeuvre", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        tableEmpCours.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Exemplaire", "Usager", "Date Emprunt", "Date Retour"
            }
        ));
        tableEmpCours.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tableEmpCoursMouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(tableEmpCours);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 13, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout EmpruntPanelLayout = new javax.swing.GroupLayout(EmpruntPanel);
        EmpruntPanel.setLayout(EmpruntPanelLayout);
        EmpruntPanelLayout.setHorizontalGroup(
            EmpruntPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EmpruntPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(EmpruntPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(menuEmpPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(EmpruntPanelLayout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(panExemplaires, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0))
        );
        EmpruntPanelLayout.setVerticalGroup(
            EmpruntPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EmpruntPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(menuEmpPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(EmpruntPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panExemplaires, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        mainPanel.add(EmpruntPanel, "card3");

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bookings-icon.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(69, 69, 69)
                                .addComponent(jLabel6)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(303, 303, 303)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(90, 90, 90))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void empruntsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empruntsButtonActionPerformed
        // TODO add your handling code here:
        CardLayout card = (CardLayout) mainPanel.getLayout();
        card.show(mainPanel, "panel1");

        String identitfiant = identifiantComboBox.getSelectedItem().toString();
        if (!identitfiant.equals("Choix ID")) {
            emprunterButton.setEnabled(true);
        } else {
            emprunterButton.setEnabled(false);
            rendreButton.setEnabled(false);
            annulerResaButton.setEnabled(false);
        }
    }//GEN-LAST:event_empruntsButtonActionPerformed

    private void retourButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retourButtonActionPerformed
      menu m = new menu();
        this.dispose();
        m.setVisible(true);       
    }//GEN-LAST:event_retourButtonActionPerformed

    private void tableExemplairesMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableExemplairesMouseReleased
        int row = tableEmpCours.getSelectedRow();
                int nbreCol = tableEmpCours.getColumnCount();

                dataLigneSelectedEmprunts = new Object[nbreCol];
                if (row >= 0) {
                    for (int i = 0; i < nbreCol; i++) {
                        dataLigneSelectedEmprunts[i] = tableEmpCours.getModel().getValueAt(row, i);
                    }
                    rendreButton.setEnabled(true);
                } else {
                    rendreButton.setEnabled(false);
                }
    }//GEN-LAST:event_tableExemplairesMouseReleased

    private void tableEmpCoursMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableEmpCoursMouseReleased
        int row = tableEmpCours.getSelectedRow();
                int nbreCol = tableEmpCours.getColumnCount();

                dataLigneSelectedEmprunts = new Object[nbreCol];
                if (row >= 0) {
                    for (int i = 0; i < nbreCol; i++) {
                        dataLigneSelectedEmprunts[i] = tableEmpCours.getModel().getValueAt(row, i);
                    }
                    rendreButton.setEnabled(true);
                } else {
                    rendreButton.setEnabled(false);
                }
    }//GEN-LAST:event_tableEmpCoursMouseReleased

    private void ReservationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReservationButtonActionPerformed
        // TODO add your handling code here:
        CardLayout card = (CardLayout) mainPanel.getLayout();
        card.show(mainPanel, "panel2");
        String identitfiant = identifiantComboBox.getSelectedItem().toString();
        if (!identitfiant.equals("Choix ID")) {
            reserverButton.setEnabled(true);
        } else {
            reserverButton.setEnabled(false);
        }
    }//GEN-LAST:event_ReservationButtonActionPerformed

    private void affEmpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_affEmpButtonActionPerformed
        // TODO add your handling code here:
        try {
            String identitfiant = identifiantComboBox.getSelectedItem().toString();
            if (!identitfiant.equals("Choix ID")) {
                Oeuvre oeuvre = getOeuvreInfos();
                ArrayList<Emprunt> listEmprunts = EmpruntControl.findEmprunts(oeuvre);
                if (null != listEmprunts) {
                    fillEmpruntsJtable(listEmprunts);
                } else {
                    showMessageSucces("Aucun emprunt en cours de cette oeuvre trouvÃ©");
                    String titre[] = new String[]{"ID", "Exemplaire", "Usager",
                        "Date Emprunt", "Date Retour"};
                    Object data[][] = new Object[1][titre.length];
                    ModelTableau model = new ModelTableau(data, titre);
                    tableEmpCours.setModel(model);
                    tableEmpCours.setRowHeight(1);
                }
            }

        } catch (BibalExceptions ex) {
            System.out.println("IHM.GestionReservationsEmprunts.affEmpButtonActionPerformed()");
        }
    }//GEN-LAST:event_affEmpButtonActionPerformed

    private void identifiantComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_identifiantComboBoxActionPerformed
        // TODO add your handling code here:
        String identitfiant = identifiantComboBox.getSelectedItem().toString();
        if (!identitfiant.equals("Choix ID")) {
            try {
                int id = parseInt(identitfiant);
                Oeuvre oeuvre = OeuvreControl.findById(id);
                titreLabelValue.setText(oeuvre.getTitre());
                categorieLabelValue.setText(oeuvre.getCategorie());
                typeOeuvreLabelValue.setText(oeuvre.getClass().getSimpleName());
                auteurLabelValue.setText(oeuvre.getAuteur());
                nbExemplaireLabelValue.setText(oeuvre.getExamplairesOeuvre().size() + "");
            } catch (BibalExceptions ex) {
                System.out.println("IHM.GestionReservationsEmprunts.identifiantComboBoxActionPerformed()");
            }
            affEmpButton.setEnabled(true);
            affExempButton.setEnabled(true);
            emprunterButton.setEnabled(true);
            reserverButton.setEnabled(true);
            affResaButton.setEnabled(true);
        } else {
            titreLabelValue.setText("");
            categorieLabelValue.setText("");
            typeOeuvreLabelValue.setText("");
            auteurLabelValue.setText("");
            nbExemplaireLabelValue.setText("");
            affEmpButton.setEnabled(false);
            affExempButton.setEnabled(false);
            emprunterButton.setEnabled(false);
            rendreButton.setEnabled(false);
            reserverButton.setEnabled(false);
            affResaButton.setEnabled(false);

        }
        rendreButton.setEnabled(false);
        //vider les tables
        tableExemplaires.setModel(new ModelTableau(new Object[0][0],
                new String[]{"ID", "Etat"}));
        tableExemplaires.setRowHeight(30);

        tableEmpCours.setModel(new ModelTableau(new Object[0][0],
                new String[]{"ID", "Exemplaire", "Usager",
                    "Date Emprunt", "Date Retour"}));
        tableResaCours.setRowHeight(30);

        tableResaCours.setModel(new ModelTableau(new Object[0][0],
                new String[]{"ID", "Oeuvre", "Usager",
                    "Date Réservation"}));
        tableResaCours.setRowHeight(30);
    }//GEN-LAST:event_identifiantComboBoxActionPerformed

    private void affExempButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_affExempButtonActionPerformed
        // TODO add your handling code here:
        try {
            String identitfiant = identifiantComboBox.getSelectedItem().toString();
            if (!identitfiant.equals("Choix ID")) {
                Oeuvre oeuvre = getOeuvreInfos();
                ArrayList<Exemplaire> listExemplaires = ExemplaireControl.findExemplaireDispo(oeuvre);
                if (null != listExemplaires) {
                    fillExemplaireJtable(listExemplaires);
                } else {
                    String titre[] = new String[]{"ID", "Etat"};
                    Object data[][] = new Object[1][titre.length];
                    ModelTableau model = new ModelTableau(data, titre);
                    tableExemplaires.setModel(model);
                    tableExemplaires.setRowHeight(1);
                    showMessageSucces("Aucun exemplaire disponible trouvé");
                }
            }
        } catch (BibalExceptions e) {
            System.out.println("IHM.GestionOeuvre.afficherButtonActionPerformed()");
        }
    }//GEN-LAST:event_affExempButtonActionPerformed

    private void rendreButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rendreButtonActionPerformed
        // TODO add your handling code here:
        try {
            int oeuvreId = getOeuvreID();
            if (oeuvreId != -1 && tableEmpCours.getSelectedRow() >= 0) {
                int idExemplaire = parseInt(dataLigneSelectedEmprunts[1].toString());
                int idOeuvre = parseInt(identifiantComboBox.getSelectedItem().toString());
                EmpruntControl.rendre(dataLigneSelectedEmprunts[2].toString(), idOeuvre, idExemplaire);
                ((ModelTableau) tableEmpCours.getModel()).removeRow(tableEmpCours.getSelectedRow());
                showMessageSucces("Exemplaire Rendu");
            }
        } catch (BibalExceptions e) {
            System.out.println("IHM.GestionReservationsEmprunts.rendreButtonActionPerformed()");
        }
    }//GEN-LAST:event_rendreButtonActionPerformed

    private void emprunterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emprunterButtonActionPerformed
        // TODO add your handling code here:
        String titre = titreLabelValue.getText();
        GestionEmprunts emprunter = new GestionEmprunts(this, true, titre);
        emprunter.setLocationRelativeTo(null);
        emprunter.setVisible(true);
    }//GEN-LAST:event_emprunterButtonActionPerformed

    private void tableResaCoursMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableResaCoursMouseReleased
        // TODO add your handling code here:
                int row = tableResaCours.getSelectedRow();
                int nbreCol = tableResaCours.getColumnCount();

                dataLigneSelectedReservations = new Object[nbreCol];
                if (row >= 0) {
                    for (int i = 0; i < nbreCol; i++) {
                        dataLigneSelectedReservations[i] = tableResaCours.getModel().getValueAt(row, i);
                    }
                    annulerResaButton.setEnabled(true);
                } else {
                    annulerResaButton.setEnabled(false);
                }
    }//GEN-LAST:event_tableResaCoursMouseReleased

    private void reserverButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserverButtonActionPerformed
        // TODO add your handling code here:
         String titre = titreLabelValue.getText();
        GestionReservations reserver = new GestionReservations(this, true, titre);
        reserver.setLocationRelativeTo(null);
        reserver.setVisible(true);
    }//GEN-LAST:event_reserverButtonActionPerformed

    private void affResaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_affResaButtonActionPerformed
        // TODO add your handling code here:
               try {
            String identitfiant = identifiantComboBox.getSelectedItem().toString();
            if (!identitfiant.equals("Choix ID")) {
                Oeuvre oeuvre = getOeuvreInfos();
                ArrayList<Reservation> listReservations = ReservationControl.findByReservation(oeuvre);
                if (null != listReservations) {
                    fillResaJtable(listReservations);
                } else {
                    JOptionPane.showMessageDialog(null,
                            "Aucune réservation en cours de cette oeuvre trouvée", "Informations",
                            JOptionPane.INFORMATION_MESSAGE);
                    String titre[] = new String[]{"ID", "Exemplaire", "Usager",
                        "Date Emprunt", "Date Retour"};
                    Object data[][] = new Object[1][titre.length];
                    ModelTableau model = new ModelTableau(data, titre);
                    tableResaCours.setModel(model);
                    tableResaCours.setRowHeight(1);
                }
            }

        } catch (BibalExceptions e) {
            System.out.println("IHM.GestionReservationsEmprunts.affEmpButtonActionPerformed()");
        }
    }//GEN-LAST:event_affResaButtonActionPerformed

    private void annulerResaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annulerResaButtonActionPerformed
        // TODO add your handling code here:
         try {
            int oeuvreId = getOeuvreID();
            if (oeuvreId != -1 && tableResaCours.getSelectedRow() >= 0) {
                int idUsager = parseInt(dataLigneSelectedReservations[2].toString());
                ReservationControl.annuler(idUsager, titreLabelValue.getText());
                ((ModelTableau) tableResaCours.getModel()).removeRow(tableResaCours.getSelectedRow());
                showMessageSucces("Réservation annulée ");
            }

        } catch (BibalExceptions e) {
            System.out.println("IHM.GestionReservationsEmprunts.annulerResaButtonActionPerformed()");
        }
    }//GEN-LAST:event_annulerResaButtonActionPerformed

private int getOeuvreID() {
        String id = identifiantComboBox.getSelectedItem().toString();
        if (!id.equals("Choisir identifiant")) {
            return parseInt(id);
        }
        return -1;
    }
private void fillExemplaireJtable(ArrayList<Exemplaire> listExemplaires) {
        String titre[] = new String[]{"ID", "Etat"};
        if (listExemplaires.size() > 0) {
//            pour le findByID si l'objet ajoutÃ© est null
            int nbLigne = (null == listExemplaires.get(0)) ? 0 : listExemplaires.size();
            Object data[][] = new Object[nbLigne][titre.length];
            for (int i = 0; i < nbLigne; i++) {
                Exemplaire exemplaire = listExemplaires.get(i);
                data[i][0] = exemplaire.getId();
                data[i][1] = exemplaire.getEtat();
            }
            ModelTableau model = new ModelTableau(data, titre);
            tableExemplaires.setModel(model);
            tableExemplaires.setRowHeight(30);
        } else {
            //afficher tableau vide
            Object data[][] = new Object[1][titre.length];
            ModelTableau model = new ModelTableau(data, titre);
            tableExemplaires.setModel(model);
            tableExemplaires.setRowHeight(1);
        }
    }
private void fillEmpruntsJtable(ArrayList<Emprunt> listEmprunts) {
        String titre[] = new String[]{"ID", "Exemplaire", "Usager",
            "Date Emprunt", "Date Retour"};
        if (listEmprunts.size() > 0) {
//            pour le findByID si l'objet ajouté est null
            int nbLigne = (null == listEmprunts.get(0)) ? 0 : listEmprunts.size();
            Object data[][] = new Object[nbLigne][titre.length];
            for (int i = 0; i < nbLigne; i++) {
                Emprunt emprunt = listEmprunts.get(i);
                data[i][0] = emprunt.getId();
                data[i][1] = emprunt.getExemplairesEmprunt().getId();
                data[i][2] = emprunt.getUsagerEmprunt().getNom();
                data[i][3] = emprunt.getDateEmprunt();
                data[i][4] = emprunt.getDateRetourPrevu();

            }
            ModelTableau model = new ModelTableau(data, titre);
            tableEmpCours.setModel(model);
            tableEmpCours.setRowHeight(30);
        } else {
            //afficher tableau vide
            Object data[][] = new Object[1][titre.length];
            ModelTableau model = new ModelTableau(data, titre);
            tableEmpCours.setModel(model);
            tableEmpCours.setRowHeight(1);
        }
    }
  String nomusager=""; 
  int numreser=00;
     LocalDateTime myDateObj = LocalDateTime.now();  
      DateTimeFormatter myFormatObj = DateTimeFormatter.ofPattern("dd/MM/yyyy");  
    String formattedDate = myDateObj.format(myFormatObj);  
   
  
      private void fillResaJtable(ArrayList<Reservation> listReservations) {
        String titre[] = new String[]{"ID", "Oeuvre", "Usager","Date Réservation"};
        if (listReservations.size() > 0) {
            int nbLigne = (null == listReservations.get(0)) ? 0 : listReservations.size();
            Object data[][] = new Object[nbLigne][titre.length];
            for (int i = 0; i < nbLigne; i++) {
                Reservation reservation = listReservations.get(i);
                data[i][0] = reservation.getId();
                data[i][1] = reservation.getOeuvresReservation().getId();
                data[i][2] = reservation.getUsagerReservation().getId();
                data[i][3] = reservation.getDateReservation();
                 nomusager=reservation.getUsagerReservation().getNom();
                 numreser = reservation.getId();
          
            }
            ModelTableau model = new ModelTableau(data, titre);
            tableResaCours.setModel(model);
            tableResaCours.setRowHeight(30);
        } else {
            //afficher tableau vide
            Object data[][] = new Object[1][titre.length];
            ModelTableau model = new ModelTableau(data, titre);
            tableResaCours.setModel(model);
            tableResaCours.setRowHeight(1);
        }
    }
     private void setIdentifiant() {
        PreparedStatement preparedStatement = null;
        ResultSet resultSet = null;
        try {
            final String SQL_SELECT_ID = "SELECT id FROM oeuvre ";
            preparedStatement = initialiseRequetePreparee(DBConnection.getConnection(),
                    SQL_SELECT_ID, new Object[0]);
            resultSet = preparedStatement.executeQuery();
            int identifiant;
            while (resultSet.next()) {
                identifiant = resultSet.getInt("id");
                identifiantComboBox.addItem(Integer.toString(identifiant));
            }
        } catch (SQLException | BibalExceptions e) {
            showMessageDialog(null, "Erreurs d'accés Ã  la base de données",
                    "Erreurs", JOptionPane.ERROR_MESSAGE);
        } finally {
            closeStatementResultSet(preparedStatement, resultSet);
        }
    }
      private Oeuvre getOeuvreInfos() {
        int id = parseInt(identifiantComboBox.getSelectedItem().toString());
        String titre = titreLabelValue.getText();
        String auteur = auteurLabelValue.getText();
        String categorie = categorieLabelValue.getText();
        String typeOeuvre = typeOeuvreLabelValue.getText();
        Oeuvre oeuvre;
        if (typeOeuvre.equals(Magazine.class.getSimpleName())) {
            oeuvre = new Magazine(id, titre, auteur, categorie);
        } else {
            oeuvre = new Livre(id, titre, auteur, categorie);
        }
        return oeuvre;
    }

    private Object dataLigneSelectedEmprunts[];
    private Object dataLigneSelectedReservations[];




    

      
     private static void writeDataToDocument(Document doc, String[][] purchaseData) {
    //get the third table
    Table table = doc.getSections().get(0).getTables().get(2);
    
    //determine if it needs to add rows
    if (purchaseData.length > 1) {
        //add rows
        addRows(table, purchaseData.length - 1);
    }
    //fill the table cells with value
    fillTableWithData(table, purchaseData);
    }
            private static void fillTableWithData(Table table, String[][] data) {
    for (int r = 0; r < data.length; r++) {
        for (int c = 0; c < data[r].length; c++) {
            //fill data in cells
            table.getRows().get(r + 1).getCells().get(c).getParagraphs().get(0).setText(data[r][c]);
        }
    }
}
    
    private static void addRows(Table table, int rowNum) {
    for (int i = 0; i < rowNum; i++) {
        //insert specific number of rows by cloning the second row
        table.getRows().insert(2 + i, table.getRows().get(1).deepClone());
       
    }
   
} 
 

    private void imprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimerActionPerformed
         //create a document instance
         
        Document doc = new Document();


        //load the template file
        doc.loadFromFile("x.docx");
      
        //replace text in the document
        doc.replace("#InvoiceNum", numreser+"", true, true);
        doc.replace("#titre", titreLabelValue.getText()+""+"", true, true);
        doc.replace("#CompanyName", nomusager+"", true, true);
        doc.replace("#dd/mm/yy", formattedDate+"", true, true);
      
        //define purchase data
      
        String[][] purchaseData = {
              new String[]{tableResaCours.getModel().getValueAt(0,0)+"", tableResaCours.getModel().getValueAt(0,1)+"", tableResaCours.getModel().getValueAt(0,2)+"",tableResaCours.getModel().getValueAt(0,3)+"",},
               new String[]{tableResaCours.getModel().getValueAt(1,0)+"", tableResaCours.getModel().getValueAt(1,1)+"", tableResaCours.getModel().getValueAt(1,2)+"",tableResaCours.getModel().getValueAt(1,3)+"",},
               new String[]{tableResaCours.getModel().getValueAt(2,0)+"", tableResaCours.getModel().getValueAt(2,1)+"", tableResaCours.getModel().getValueAt(2,2)+"",tableResaCours.getModel().getValueAt(2,3)+"",},
        };
       
        
    
        //write the purchase data to the document
        writeDataToDocument(doc, purchaseData);
               
        //update fields
        doc.isUpdateFields(true);

        //save file in pdf format
        doc.saveToFile("Invoice.pdf", FileFormat.PDF);
if (Desktop.isDesktopSupported()) {
            try {
                File myFile = new File("Invoice.pdf");
                Desktop.getDesktop().open(myFile);
            } catch (IOException ex) {
                // no application registered for PDFs
            }
        }
    }//GEN-LAST:event_imprimerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionReservationsEmprunts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionReservationsEmprunts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionReservationsEmprunts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionReservationsEmprunts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionReservationsEmprunts().setVisible(true);
            }
        });
    }
    
      
    // Variables declaration - do not modify         

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel EmpruntPanel;
    private javax.swing.JButton ReservationButton;
    private javax.swing.JPanel ReservationPanel;
    private javax.swing.JButton affEmpButton;
    private javax.swing.JButton affExempButton;
    private javax.swing.JButton affResaButton;
    private javax.swing.JButton annulerResaButton;
    private javax.swing.JLabel auteurLabel1;
    private javax.swing.JLabel auteurLabelValue;
    private javax.swing.JLabel categorieLabelValue;
    private javax.swing.JButton emprunterButton;
    private javax.swing.JButton empruntsButton;
    private javax.swing.JComboBox<String> identifiantComboBox;
    private javax.swing.JLabel identifiantLabel1;
    private javax.swing.JButton imprimer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel menuEmpPanel;
    private javax.swing.JPanel menuResaPanel;
    private javax.swing.JLabel nbExemplaireLabelValue;
    private javax.swing.JPanel panExemplaires;
    private javax.swing.JButton rendreButton;
    private javax.swing.JButton reserverButton;
    private javax.swing.JButton retourButton;
    private javax.swing.JTable tableEmpCours;
    private javax.swing.JTable tableExemplaires;
    private javax.swing.JTable tableResaCours;
    private javax.swing.JLabel titreLabelValue;
    private javax.swing.JLabel typeOeuvreLabelValue;
    // End of variables declaration//GEN-END:variables
}
